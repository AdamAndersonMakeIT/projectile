{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Projectile"},{"location":"/index.html#projectile","text":"Projectile creates beautiful Scala code from your Postgres database, GraphQL queries, TypeScript definitions, or Thrift IDL.\nhttps://kyleu.com/projectile\nhttps://github.com/KyleU/projectile","title":"Projectile"},{"location":"/index.html#","text":"","title":"Code Generation"},{"location":"/index.html#","text":"For each table and view, Projectile can generate:\nCase classes with Circe JSON serialization using Scala representations of all database types (including Enumeratum enums) Strongly-typed database queries for all CRUD operations and indexed queries, along with an asynchronous service interface Slick or Doobie bindings, supporting all Postgres types and pre-built common queries A full-featured Sangria GraphQL interface, supporting batched relationship traversal and a lovely IDE and Schema visualizer Play framework controllers and views exposing an Openapi/Swagger endpoint and a beautiful admin interface supporting local or OAuth login","title":"Postgres Database"},{"location":"/index.html#","text":"Projectile can turn your TypeScript definition files into a well-designed Scala.js facade project. This is a work in progress, it’s not quite ready","title":"TypeScript Definitions"},{"location":"/index.html#","text":"Projectile monitors your GraphQL schema and queries, and generates Scala case classes with input and result serialization","title":"GraphQL Queries"},{"location":"/index.html#","text":"Projectile monitors your Thrift IDL and works with Scrooge to create wrapper classes that support serialization, tracing, and Scala Futures","title":"Thrift IDL"},{"location":"/index.html#license","text":"The code is licensed under CC0-1.0\nYou can basically do whatever you want with the code, no attribution required. Make it your own!","title":"License"},{"location":"/gettingStarted/index.html","text":"","title":"Getting Started"},{"location":"/gettingStarted/index.html#getting-started","text":"Projectile runs in your project’s directory, creating generated source code based on your database, Thrift, or GraphQL APIs.\nInstalling Projectile Creating a Project","title":"Getting Started"},{"location":"/gettingStarted/installing.html","text":"","title":"Installing Projectile"},{"location":"/gettingStarted/installing.html#installing-projectile","text":"You’ve got a few options for acquiring Projectile. Most folks use the shell script, but other methods are available. If you’re looking to extend or contribute to Projectile, run it from source.","title":"Installing Projectile"},{"location":"/gettingStarted/installing.html#option-1-shell-script","text":"Save this file as projectile.sh and mark it executable. Once executed, it will download and run the latest release from GitHub, printing usage instructions by default. Run projectile.sh server to start the server","title":"Option 1: Shell script"},{"location":"/gettingStarted/installing.html#option-2-release-jar","text":"Download the latest release from GitHub. Only a single file, projectile.jar, is needed From your project’s directory, run java -jar projectile.jar, this will print CLI usage To run the web server, run java -jar projectile.jar server","title":"Option 2: Release jar"},{"location":"/gettingStarted/installing.html#option-3-ammonite","text":"Save this file as projectile.sc. Run with amm projectile.sc and it will download the dependencies and print usage instructions. Run amm projectile.sc server to start the server","title":"Option 3: Ammonite"},{"location":"/gettingStarted/installing.html#option-4-sbt-plugin","text":"An SBT plugin (details here) is provided for running Projectile from within your project’s SBT session. Because of SBT plugin restrictions, the web server is unavailable, though command-line usage is supported. You can use one of the other methods to launch the server and use a UI to configure your project","title":"Option 4: SBT plugin"},{"location":"/gettingStarted/installing.html#option-5-run-from-source","text":"Clone Projectile\n$ cd projectile\n$ sbt\n> run\n$ open http://127.0.0.1:20000\nThe project is built on Scala and SBT, and can be opened by IntelliJ directly","title":"Option 5: Run from source"},{"location":"/gettingStarted/project.html","text":"","title":"Creating a Project"},{"location":"/gettingStarted/project.html#creating-a-project","text":"Using one of the methods described in Installing Projectile, launch the projectile server, and open http://localhost:20000","title":"Creating a Project"},{"location":"/gettingStarted/project.html#creating-the-input","text":"Before we create our project, we need to make an input pointing to your database, Thrift IDL, or GraphQL schema and queries.\nEither click the “Add Input” link on the home page, or open http://localhost:20000/input directly.\n##","title":"Creating the input"},{"location":"/codegen/index.html","text":"","title":"Code Generation"},{"location":"/codegen/index.html#code-generation","text":"API Documentation","title":"Code Generation"},{"location":"/codegen/index.html#","text":"For PostgreSQL databases, Projectile can generate a full admin web application, Slick and Doobie bindings, GraphQL and OpenAPI endpoints, and more.","title":"Database Export"},{"location":"/codegen/index.html#","text":"For Thrift APIs, Projectile can extend Scrooge-generated Scala code to provide case classes with Json serialization, services that use Scala Futures, and native scalars.","title":"Thrift Export"},{"location":"/codegen/index.html#","text":"For a GraphQL schema and a set of queries, Projectile can create strongly-typed Scala representations of your models and services, and helper methods to call a running api.","title":"GraphQL Export"},{"location":"/codegen/index.html#","text":"Projectile parses TypeScript definitions and creates a Scala.js facade project","title":"TypeScript"},{"location":"/codegen/index.html#","text":"An (optional) SBT plugin is provided that updates your generated code on compilation.","title":"SBT Plugin"},{"location":"/codegen/database.html","text":"","title":"Database"},{"location":"/codegen/database.html#database","text":"Projectile reads the details of your PostgreSQL database, and generates Scala code intended to be used alongside the Projectile libraries. It creates only what you ask for, from basic case classes to a full admin site with GraphQL.\nIf you’ve already installed Projectile, started the server, and created your project, you can edit the installed features, export your project, and end up with a pleasantly-designed Scala application.\nTutorial\nAPI Documentation","title":"Database"},{"location":"/codegen/database.html#features","text":"Core Enumeratum enums Scala case classes Search results model Json serialization DataModel support Service JDBC queries Asynchronous service Slick Slick column types Slick tables Doobie Doobie enum bindings Doobie model bindings Scalatest unit tests GraphQL Sangria enum schemata Sangria model schemata Example GraphQL queries Controller Play Framework controller Play routes files Twirl templates Thrift Thrift IDL files OpenAPI Swagger/OpenAPI endpoints Wiki Github project wiki","title":"Features"},{"location":"/codegen/features/db/core.html","text":"","title":"Core"},{"location":"/codegen/features/db/core.html#core","text":"","title":"Core"},{"location":"/codegen/features/db/core.html#enumeratum-enums","text":"TODO\nExample","title":"Enumeratum enums"},{"location":"/codegen/features/db/core.html#scala-case-classes","text":"TODO\nExample","title":"Scala case classes"},{"location":"/codegen/features/db/core.html#search-results-model","text":"TODO\nExample","title":"Search results model"},{"location":"/codegen/features/db/core.html#json-serialization","text":"TODO","title":"Json serialization"},{"location":"/codegen/features/db/core.html#datamodel-support","text":"TODO","title":"DataModel support"},{"location":"/codegen/features/db/service.html","text":"","title":"Service"},{"location":"/codegen/features/db/service.html#service","text":"","title":"Service"},{"location":"/codegen/features/db/service.html#jdbc-queries","text":"TODO\nExample","title":"JDBC queries"},{"location":"/codegen/features/db/service.html#asynchronous-service","text":"TODO\nExample","title":"Asynchronous service"},{"location":"/codegen/features/db/slick.html","text":"","title":"Slick"},{"location":"/codegen/features/db/slick.html#slick","text":"","title":"Slick"},{"location":"/codegen/features/db/slick.html#slick-column-types","text":"TODO\nExample","title":"Slick column types"},{"location":"/codegen/features/db/slick.html#slick-tables","text":"TODO\nExample","title":"Slick tables"},{"location":"/codegen/features/db/doobie.html","text":"","title":"Doobie"},{"location":"/codegen/features/db/doobie.html#doobie","text":"","title":"Doobie"},{"location":"/codegen/features/db/doobie.html#doobie-enum-bindings","text":"TODO\nExample","title":"Doobie enum bindings"},{"location":"/codegen/features/db/doobie.html#doobie-model-bindings","text":"TODO\nExample","title":"Doobie model bindings"},{"location":"/codegen/features/db/doobie.html#scalatest-unit-tests","text":"TODO","title":"Scalatest unit tests"},{"location":"/codegen/features/db/graphql.html","text":"","title":"GraphQL"},{"location":"/codegen/features/db/graphql.html#graphql","text":"","title":"GraphQL"},{"location":"/codegen/features/db/graphql.html#sangria-enum-schemata","text":"TODO\nExample","title":"Sangria enum schemata"},{"location":"/codegen/features/db/graphql.html#sangria-model-schemata","text":"TODO\nExample","title":"Sangria model schemata"},{"location":"/codegen/features/db/graphql.html#example-graphql-queries","text":"TODO\nExample","title":"Example GraphQL queries"},{"location":"/codegen/features/db/controller.html","text":"","title":"Controller"},{"location":"/codegen/features/db/controller.html#controller","text":"","title":"Controller"},{"location":"/codegen/features/db/controller.html#play-framework-controller","text":"TODO\nExample","title":"Play Framework controller"},{"location":"/codegen/features/db/controller.html#play-routes-files","text":"TODO\nExample","title":"Play routes files"},{"location":"/codegen/features/db/controller.html#twirl-templates","text":"TODO\nExamples","title":"Twirl templates"},{"location":"/codegen/features/db/thrift.html","text":"","title":"Thrift"},{"location":"/codegen/features/db/thrift.html#thrift","text":"","title":"Thrift"},{"location":"/codegen/features/db/thrift.html#thrift-idl-files","text":"TODO\nExample","title":"Thrift IDL files"},{"location":"/codegen/features/db/openapi.html","text":"","title":"OpenAPI"},{"location":"/codegen/features/db/openapi.html#openapi","text":"","title":"OpenAPI"},{"location":"/codegen/features/db/openapi.html#swagger-openapi-endpoints","text":"TODO\nExample","title":"Swagger/OpenAPI endpoints"},{"location":"/codegen/features/db/wiki.html","text":"","title":"Wiki"},{"location":"/codegen/features/db/wiki.html#wiki","text":"","title":"Wiki"},{"location":"/codegen/features/db/wiki.html#github-project-wiki","text":"TODO\nExample","title":"Github project wiki"},{"location":"/codegen/thrift.html","text":"","title":"Thrift"},{"location":"/codegen/thrift.html#thrift","text":"Projectile monitors your Thrift IDL, and works with Scrooge to create wrapper classes that support serialization, tracing, and Scala Futures. This is the newest piece of this project, so it’s a work in progress.\nTutorial\nAPI Documentation\nMore info soon!","title":"Thrift"},{"location":"/codegen/graphql.html","text":"","title":"GraphQL"},{"location":"/codegen/graphql.html#graphql","text":"Projectile monitors your GraphQL schema and queries, and generates Scala case classes with input and result serialization. It’s cooler than I’m making it sound.\nTutorial\nAPI Documentation\nMore info soon!","title":"GraphQL"},{"location":"/codegen/typescript.html","text":"","title":"TypeScript"},{"location":"/codegen/typescript.html#typescript","text":"Projectile parses TypeScript definitions and creates a Scala.js facade project\nTutorial\nAPI Documentation\nMore info soon!","title":"TypeScript"},{"location":"/codegen/sbt-plugin.html","text":"","title":"SBT Plugin"},{"location":"/codegen/sbt-plugin.html#sbt-plugin","text":"Projectile provides a (completely optional) sbt plugin\nTo enable it, add the following to your plugins.sbt:\naddSbtPlugin(\"com.kyleu\" % \"projectile-sbt\" % \"1.8.2\")\nThen add it to your project’s build definition:\nenablePlugins(SbtProjectile)\nNow, projectile will run each time you compile your project (don’t worry, it only adds a few milliseconds). You can also use the CLI by running the sbt task projectile\nAPI Documentation","title":"SBT Plugin"},{"location":"/libraries/index.html","text":"","title":"Scala Libraries"},{"location":"/libraries/index.html#scala-libraries","text":"Projectile generates Scala code that expects helper classes to be available.\nYou can provide your own, or use the Projectile libraries. You almost certainly won’t need them all, but documentation on the provided classes is available here.\nCore Scala Tracing JDBC Slick Doobie Thrift GraphQL Service Scala.js Admin","title":"Scala Libraries"},{"location":"/libraries/core.html","text":"","title":"Core"},{"location":"/libraries/core.html#core","text":"Classes and utilities shared between Scala and Scala.js (API Documentation)","title":"Core"},{"location":"/libraries/core.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-core\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-core_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-core_2.12', version: '1.8.2'\n}\n(Or, use “%%%” for Scala.js and cross-built projects)","title":"Usage"},{"location":"/libraries/core.html#classes","text":"","title":"Classes"},{"location":"/libraries/core.html#","text":"Wrapper case class used for search results","title":"BaseResult"},{"location":"/libraries/core.html#","text":"A simple key and value case class, used where unordered maps aren’t appropriate","title":"Tag"},{"location":"/libraries/core.html#","text":"Provides ordering, formatting, and common utilities for Local and Zoned java.time date classes","title":"DateUtils"},{"location":"/libraries/core.html#","text":"Provides all the imports and utility methods you need to work with Circe using dates, uuids, enums and sealed traits","title":"JsonSerializers"},{"location":"/libraries/core.html#","text":"Rather than use null references in your code, NullUtils is provided for common operations and values involving nulls","title":"NullUtils"},{"location":"/libraries/core.html#","text":"Currently only provides a cross-platform method for formatting numbers","title":"NumberUtils"},{"location":"/libraries/core.html#","text":"Exposes a method to split a string to an ordered sequence of lines","title":"StringUtils"},{"location":"/libraries/core.html#","text":"Utility methods to transform a java.util.UUID to and from a sequence of bytes","title":"UuidUtils"},{"location":"/libraries/scala.html","text":"","title":"Scala"},{"location":"/libraries/scala.html#scala","text":"Common classes relating to core models and utilities (API Documentation)","title":"Scala"},{"location":"/libraries/scala.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-scala\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-scala_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-scala_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/scala.html#classes","text":"","title":"Classes"},{"location":"/libraries/scala.html#","text":"Uses a user-provided secret to encrypt and decrypt arbitrary bytes and strings using AES/ECB/PKCS5Padding","title":"EncryptionUtils"},{"location":"/libraries/scala.html#","text":"A JSON parser that supports comments and included external files","title":"JsonIncludeParser"},{"location":"/libraries/scala.html#","text":"Provides a logging interface that accepts TraceData in its methods and includes the trace ids in its output","title":"Logging"},{"location":"/libraries/scala.html#","text":"Used everywhere, TraceData is a common trait that exposes authentication and tracing information for OpenTracing services","title":"TraceData"},{"location":"/libraries/scala.html#","text":"Provides tracing helpers and methods to wrap access to OpenTracing","title":"TracingService"},{"location":"/libraries/tracing.html","text":"","title":"Tracing"},{"location":"/libraries/tracing.html#tracing","text":"Helper classes for OpenTracing and Micrometer (API Documentation)","title":"Tracing"},{"location":"/libraries/tracing.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-tracing\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-tracing_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-tracing_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/tracing.html#classes","text":"","title":"Classes"},{"location":"/libraries/tracing.html#","text":"Helper class to initialize Prometheus, Datadog, or StatsD metrics reporting","title":"Instrumented"},{"location":"/libraries/tracing.html#","text":"Case class containing all of the information needed to report metrics. Usually created from a config file.","title":"MetricsConfig"},{"location":"/libraries/tracing.html#","text":"Implements TracingService to provide system-wide tracing support","title":"OpenTracingService"},{"location":"/libraries/tracing.html#","text":"Extends TraceData with OpenTracing-specific functionality","title":"TraceDataOpenTracing"},{"location":"/libraries/jdbc.html","text":"","title":"JDBC"},{"location":"/libraries/jdbc.html#jdbc","text":"Imports and models for jdbc database connections (API Documentation)","title":"JDBC"},{"location":"/libraries/jdbc.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-jdbc\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-jdbc_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-jdbc_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/jdbc.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/slick.html","text":"","title":"Slick"},{"location":"/libraries/slick.html#slick","text":"Access routines for Slick databindings (API Documentation)","title":"Slick"},{"location":"/libraries/slick.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-slick\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-slick_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-slick_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/slick.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/doobie.html","text":"","title":"Doobie"},{"location":"/libraries/doobie.html#doobie","text":"Supporting classes for Doobie queries (API Documentation)","title":"Doobie"},{"location":"/libraries/doobie.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-doobie\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-doobie_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-doobie_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/doobie.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/thrift.html","text":"","title":"Thrift"},{"location":"/libraries/thrift.html#thrift","text":"Thrift service helpers, such as future conversions (API Documentation)","title":"Thrift"},{"location":"/libraries/thrift.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-thrift\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-thrift_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-thrift_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/thrift.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/graphql.html","text":"","title":"GraphQL"},{"location":"/libraries/graphql.html#graphql","text":"GraphQL utilities and helpers (API Documentation)","title":"GraphQL"},{"location":"/libraries/graphql.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-graphql\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-graphql_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-graphql_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/graphql.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/service.html","text":"","title":"Service"},{"location":"/libraries/service.html#service","text":"Supports service classes with various helpers (API Documentation)","title":"Service"},{"location":"/libraries/service.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-service\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-service_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-service_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/service.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/scalajs.html","text":"","title":"Scala.js"},{"location":"/libraries/scalajs.html#scala-js","text":"Scala.js helpers (API Documentation)","title":"Scala.js"},{"location":"/libraries/scalajs.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-scalajs\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-scalajs_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-scalajs_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/scalajs.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/admin.html","text":"","title":"Admin"},{"location":"/libraries/admin.html#admin","text":"Provides an administration web interface, graphql and rest IDE, authentication, and more (API Documentation)","title":"Admin"},{"location":"/libraries/admin.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" %% \"projectile-lib-admin\" % \"1.8.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-admin_2.12</artifactId>\n  <version>1.8.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-admin_2.12', version: '1.8.2'\n}","title":"Usage"},{"location":"/libraries/admin.html#classes","text":"TODO","title":"Classes"},{"location":"/tutorial/index.html","text":"","title":"Tutorials"},{"location":"/tutorial/index.html#tutorials","text":"The tutorials exist to help you understand and use Projectile effectively.","title":"Tutorials"},{"location":"/tutorial/index.html#","text":"This tutorial uses a PostgreSQL database to create a web app providing real-time planning poker estimation sessions. You can see the final result at estimate.poker, and view the source here.","title":"estimate.poker"},{"location":"/tutorial/index.html#","text":"This tutorial uses the React TypeScript definitions to generates a Scala.js project.","title":"react"},{"location":"/tutorial/index.html#","text":"This tutorial uses the public Star Wars GraphQL schema and generates Scala clients for hand-written queries.","title":"starwars"},{"location":"/tutorial/index.html#","text":"Once completed, this will be a tutorial on the usage of Thrift code generation.","title":"thrifty"},{"location":"/tutorial/index.html#table-of-contents","text":"react react starwars thrifty","title":"Table of contents"},{"location":"/tutorial/poker/index.html","text":"","title":"react"},{"location":"/tutorial/poker/index.html#react","text":"This tutorial uses a Postgres database to generate a full web application for Agile Planning Poker.\nTODO","title":"react"},{"location":"/tutorial/react/index.html","text":"","title":"react"},{"location":"/tutorial/react/index.html#react","text":"This tutorial uses the React TypeScript definitions to generate a Scala.js project.\nTODO","title":"react"},{"location":"/tutorial/starwars/index.html","text":"","title":"starwars"},{"location":"/tutorial/starwars/index.html#starwars","text":"This tutorial uses the public Star Wars GraphQL schema and generates Scala clients for hand-written queries.\nTODO","title":"starwars"},{"location":"/tutorial/thrifty/index.html","text":"","title":"thrifty"},{"location":"/tutorial/thrifty/index.html#thrifty","text":"Once completed, this will be a tutorial on the usage of Thrift code generation.\nTODO","title":"thrifty"},{"location":"/cookbook/index.html","text":"","title":"Cookbook"},{"location":"/cookbook/index.html#cookbook","text":"","title":"Cookbook"},{"location":"/cookbook/index.html#table-of-contents","text":"Add Database Types Remove Unused Files Troubleshooting","title":"Table of contents"},{"location":"/cookbook/add.html","text":"","title":"Add Database Types"},{"location":"/cookbook/add.html#add-database-types","text":"TODO","title":"Add Database Types"},{"location":"/cookbook/remove.html","text":"","title":"Remove Unused Files"},{"location":"/cookbook/remove.html#remove-unused-files","text":"TODO","title":"Remove Unused Files"},{"location":"/cookbook/troubleshooting.html","text":"","title":"Troubleshooting"},{"location":"/cookbook/troubleshooting.html#troubleshooting","text":"For now, hit GitHub Issues, we’re eager to help!","title":"Troubleshooting"},{"location":"/technology.html","text":"","title":"Technology"},{"location":"/technology.html#technology","text":"Projectile relies on a whole lot of tremendous open source projects. Here’s a few of them.\nScala Play Framework Akka Sangria Materialize CSS Enumeratum circe Font Awesome JQuery Slick Doobie OpenAPI","title":"Technology"},{"location":"/troubleshooting.html","text":"","title":"Troubleshooting"},{"location":"/troubleshooting.html#troubleshooting","text":"For now, hit GitHub Issues, we’re eager to help!","title":"Troubleshooting"}]}