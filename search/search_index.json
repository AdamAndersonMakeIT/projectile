{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Projectile"},{"location":"/index.html#projectile","text":"Projectile creates and manages beautiful Scala code from your Postgres database, GraphQL queries, or Thrift IDL\nWith a command line interface or web UI, Projectile lets you extend your project as your API grows and changes\nFor Postgres schemata, a full featured web application can be managed and grown, including authentication, GraphQL, Swagger, csv/svg exports, authentication, auditing, and more\nhttps://kyleu.com/projectile\nhttps://github.com/KyleU/projectile","title":"Projectile"},{"location":"/index.html#","text":"","title":"Code Generation"},{"location":"/index.html#","text":"For each table and view in your schema, Projectile can generate:\nCase classes with Circe json serialization using Scala representations of all database types (including Enumeratum enums) Strongly-typed queries for all CRUD operations and indexed relationships, along with an asynchronous service interface supporting end-to-end tracing Slick or Doobie bindings, supporting all Postgres types and pre-built common queries A full-featured Sangria GraphQL interface, supporting batched relationship traversal and a lovely IDE and Schema visualizer Play Framework controllers and views exposing an OpenAPI/Swagger endpoint A detailed and beautiful admin web application supporting local or OAuth login, and loads of features","title":"Postgres Database"},{"location":"/index.html#","text":"Projectile monitors your GraphQL schema and queries, and generates Scala case classes with input and result serialization.\nYou can start a new GraphQL project with projectile new graphql, or view the example project.","title":"GraphQL Queries"},{"location":"/index.html#","text":"Projectile monitors your Thrift IDL and works with Scrooge to create wrapper classes that support serialization, tracing, and Scala Futures\nYou can start a new GraphQL project with projectile new thrift, or view the example project.","title":"Thrift IDL"},{"location":"/index.html#","text":"","title":"FAQ"},{"location":"/index.html#how-does-my-generated-project-work-","text":"You may have had a project that was built with Projectile dumped in your lap. You may have followed the tutorials and now feel a little lost. It’s all good, this section should help you handle some common tasks.\nRunning the GUI Adding a new enum type Adding a new table Removing unused files","title":"How does my generated project work?"},{"location":"/index.html#license","text":"The code is licensed under CC0-1.0\nYou can basically do whatever you want with the code, no attribution required. Make it your own!","title":"License"},{"location":"/gettingStarted/index.html","text":"","title":"Getting Started"},{"location":"/gettingStarted/index.html#getting-started","text":"Projectile runs in your project’s directory, creating generated source code based on your database, Thrift, or GraphQL APIs.\nInstalling Projectile Creating a Project Command Line Interface","title":"Getting Started"},{"location":"/gettingStarted/installing.html","text":"","title":"Installing Projectile"},{"location":"/gettingStarted/installing.html#installing-projectile","text":"You’ve got a few options for acquiring Projectile. Most folks use homebrew when possible, but other methods are available. If you’re looking to extend or contribute to Projectile, run it from source.","title":"Installing Projectile"},{"location":"/gettingStarted/installing.html#homebrew","text":"brew tap kyleu/kyleu\nbrew install projectile","title":"Homebrew"},{"location":"/gettingStarted/installing.html#release-jar","text":"Download the latest release from GitHub. Only a single file, projectile.jar, is needed From your project’s directory, run java -jar projectile.jar, this will print CLI usage To run the web server, run java -jar projectile.jar server","title":"Release jar"},{"location":"/gettingStarted/installing.html#sbt-plugin","text":"An SBT plugin (details here) is provided for running Projectile from within your project’s SBT session. Because of SBT plugin restrictions, the web server is unavailable, though command-line usage is supported. You can use one of the other methods to launch the server and use a UI to configure your project","title":"SBT plugin"},{"location":"/gettingStarted/installing.html#run-from-source","text":"Clone Projectile\n$ cd projectile\n$ sbt\n> run\n$ open http://127.0.0.1:20000\nThe project is built on Scala and SBT, and can be opened by IntelliJ directly","title":"Run from source"},{"location":"/gettingStarted/project.html","text":"","title":"Creating a Project"},{"location":"/gettingStarted/project.html#creating-a-project","text":"An assumption We’re hoping you’ve installed Projectile using one of the methods described in Installing Projectile","title":"Creating a Project"},{"location":"/gettingStarted/project.html#starting-point","text":"This assumes you’ve got an existing project that you’d like to add Projectile generated code to. If you’d prefer to instead start from a brand new project, install Projectile and run projectile new in an empty directory\nGUI: Run projectile server from your project’s directory, and open http://localhost:20000\nCLI: If you’re using the SBT plugin, run projectile init from your project’s prompt. If you’re using the installed version, run projectile init from your project’s directory.","title":"Starting point"},{"location":"/gettingStarted/project.html#creating-the-projectile-input","text":"Now we need to make an input pointing to your database, Thrift IDL, or GraphQL schema and queries\nGUI: Either click the “Add Input” link on the home page, or open http://localhost:20000/input directly. Fill out the form, making sure to configure your database credentials or file locations. Once complete, you should see all of your models in the input detail (you can also click “Refresh” to manually update them)\nCLI: Run projectile input-add, follow the prompts. Once complete, running projectile input should show your input in the list","title":"Creating the Projectile input"},{"location":"/gettingStarted/project.html#creating-the-projectile-project","text":"It’s time to actually create your project\nGUI: Either click the “Add Project” link on the home page, or open http://localhost:20000/project directly. Fill out the form, making sure to select the input we just created. at this point, you’ll be able to configure the models of the system. Head to “Edit Features” to see the available options for project features, and select the ones you want. Explore the project detail page, it allows you to configure output paths, object naming and features, output packages, and more\nCLI: Run projectile project-add, follow the prompts. Once complete, running projectile project should show your project in the list","title":"Creating the Projectile project"},{"location":"/gettingStarted/project.html#exporting","text":"Now we export your new project, creating all sorts of code\nGUI: The “Export” button on the home page will export all projects, or you can individually export a project from its detail page. A summary is shown with all results, allowing you to see exactly what was changed\nCLI: Run projectile export, and hope for the best :)","title":"Exporting"},{"location":"/gettingStarted/project.html#auditing-optional-","text":"On occasion, you’ll remove something from your input. Because exporting the project never deletes files, you may need to run Projectile’s auditing to clean up the trash.\nGUI: Simply click “Audit” from the home page, and you’ll see a report listing orphaned files (and other project checks). You can click “Fix All” to clean up the orphaned files and apply other cleanups\nCLI: Run projectile audit, and you’ll see a report listing orphaned files (and other project checks). You can run projectile audit --fix to clean up the orphaned files and apply other cleanups.","title":"Auditing (optional)"},{"location":"/gettingStarted/cli.html","text":"","title":"Command Line Interface"},{"location":"/gettingStarted/cli.html#command-line-interface","text":"You can access the Projectile CLI by either installing the application and running projectile from your shell, or enabling the SBT plugin for your build and running projectile from sbt.","title":"Command Line Interface"},{"location":"/gettingStarted/cli.html#input-management","text":"","title":"Input Management"},{"location":"/gettingStarted/cli.html#todo","text":"","title":"TODO"},{"location":"/gettingStarted/cli.html#creating-an-input","text":"TODO","title":"Creating an Input"},{"location":"/gettingStarted/cli.html#project-management","text":"","title":"Project Management"},{"location":"/gettingStarted/cli.html#creating-a-project","text":"TODO","title":"Creating a Project"},{"location":"/gettingStarted/cli.html#auditing-your-project","text":"Run projectile audit, and you’ll see a report listing orphaned files (and other project checks). You can run projectile audit --fix to clean up the orphaned files and apply other cleanups.","title":"Auditing Your Project"},{"location":"/codegen/index.html","text":"","title":"Code Generation"},{"location":"/codegen/index.html#code-generation","text":"API Documentation","title":"Code Generation"},{"location":"/codegen/index.html#","text":"For PostgreSQL databases, Projectile can generate a full admin web application, Slick and Doobie bindings, GraphQL and OpenAPI endpoints, and more.","title":"Database Export"},{"location":"/codegen/index.html#","text":"For Thrift APIs, Projectile can extend Scrooge-generated Scala code to provide case classes with Json serialization, services that use Scala Futures, and native scalars.","title":"Thrift Export"},{"location":"/codegen/index.html#","text":"For a GraphQL schema and a set of queries, Projectile can create strongly-typed Scala representations of your models and services, and helper methods to call a running api.","title":"GraphQL Export"},{"location":"/codegen/index.html#","text":"An (optional) SBT plugin is provided that updates your generated code on compilation.","title":"SBT Plugin"},{"location":"/codegen/database.html","text":"","title":"Database"},{"location":"/codegen/database.html#database","text":"Projectile reads the details of your PostgreSQL database, and generates Scala code intended to be used alongside the Projectile libraries. It creates only what you ask for, from basic case classes to a full admin site with GraphQL.\nIf you’ve already installed Projectile, started the server, and created your project, you can edit the installed features, export your project, and end up with a pleasantly-designed Scala application.\nTutorial\nAPI Documentation","title":"Database"},{"location":"/codegen/database.html#features","text":"Core Enumeratum enums Scala case classes Search results model Json serialization DataModel support Service JDBC queries Asynchronous service Slick Slick column types Slick tables Doobie Doobie enum bindings Doobie model bindings Scalatest unit tests GraphQL Sangria enum schemata Sangria model schemata Example GraphQL queries Controller Play Framework controller Play routes files Twirl templates Thrift Thrift IDL files OpenAPI Swagger/OpenAPI endpoints Wiki Github project wiki","title":"Features"},{"location":"/codegen/features/db/core.html","text":"","title":"Core"},{"location":"/codegen/features/db/core.html#core","text":"","title":"Core"},{"location":"/codegen/features/db/core.html#enumeratum-enums","text":"TODO\nExample","title":"Enumeratum enums"},{"location":"/codegen/features/db/core.html#scala-case-classes","text":"TODO\nExample","title":"Scala case classes"},{"location":"/codegen/features/db/core.html#search-results-model","text":"TODO\nExample","title":"Search results model"},{"location":"/codegen/features/db/core.html#json-serialization","text":"TODO","title":"Json serialization"},{"location":"/codegen/features/db/core.html#datamodel-support","text":"TODO","title":"DataModel support"},{"location":"/codegen/features/db/service.html","text":"","title":"Service"},{"location":"/codegen/features/db/service.html#service","text":"","title":"Service"},{"location":"/codegen/features/db/service.html#jdbc-queries","text":"TODO\nExample","title":"JDBC queries"},{"location":"/codegen/features/db/service.html#asynchronous-service","text":"TODO\nExample","title":"Asynchronous service"},{"location":"/codegen/features/db/slick.html","text":"","title":"Slick"},{"location":"/codegen/features/db/slick.html#slick","text":"","title":"Slick"},{"location":"/codegen/features/db/slick.html#slick-column-types","text":"TODO\nExample","title":"Slick column types"},{"location":"/codegen/features/db/slick.html#slick-tables","text":"TODO\nExample","title":"Slick tables"},{"location":"/codegen/features/db/doobie.html","text":"","title":"Doobie"},{"location":"/codegen/features/db/doobie.html#doobie","text":"","title":"Doobie"},{"location":"/codegen/features/db/doobie.html#doobie-enum-bindings","text":"TODO\nExample","title":"Doobie enum bindings"},{"location":"/codegen/features/db/doobie.html#doobie-model-bindings","text":"TODO\nExample","title":"Doobie model bindings"},{"location":"/codegen/features/db/doobie.html#scalatest-unit-tests","text":"TODO","title":"Scalatest unit tests"},{"location":"/codegen/features/db/graphql.html","text":"","title":"GraphQL"},{"location":"/codegen/features/db/graphql.html#graphql","text":"","title":"GraphQL"},{"location":"/codegen/features/db/graphql.html#sangria-enum-schemata","text":"TODO\nExample","title":"Sangria enum schemata"},{"location":"/codegen/features/db/graphql.html#sangria-model-schemata","text":"TODO\nExample","title":"Sangria model schemata"},{"location":"/codegen/features/db/graphql.html#example-graphql-queries","text":"TODO\nExample","title":"Example GraphQL queries"},{"location":"/codegen/features/db/controller.html","text":"","title":"Controller"},{"location":"/codegen/features/db/controller.html#controller","text":"","title":"Controller"},{"location":"/codegen/features/db/controller.html#play-framework-controller","text":"TODO\nExample","title":"Play Framework controller"},{"location":"/codegen/features/db/controller.html#play-routes-files","text":"TODO\nExample","title":"Play routes files"},{"location":"/codegen/features/db/controller.html#twirl-templates","text":"TODO\nExamples","title":"Twirl templates"},{"location":"/codegen/features/db/thrift.html","text":"","title":"Thrift"},{"location":"/codegen/features/db/thrift.html#thrift","text":"","title":"Thrift"},{"location":"/codegen/features/db/thrift.html#thrift-idl-files","text":"TODO\nExample","title":"Thrift IDL files"},{"location":"/codegen/features/db/openapi.html","text":"","title":"OpenAPI"},{"location":"/codegen/features/db/openapi.html#openapi","text":"","title":"OpenAPI"},{"location":"/codegen/features/db/openapi.html#swagger-openapi-endpoints","text":"TODO\nExample","title":"Swagger/OpenAPI endpoints"},{"location":"/codegen/features/db/wiki.html","text":"","title":"Wiki"},{"location":"/codegen/features/db/wiki.html#wiki","text":"","title":"Wiki"},{"location":"/codegen/features/db/wiki.html#github-project-wiki","text":"TODO\nExample","title":"Github project wiki"},{"location":"/codegen/thrift.html","text":"","title":"Thrift"},{"location":"/codegen/thrift.html#thrift","text":"Projectile monitors your Thrift IDL, and works with Scrooge to create wrapper classes that support serialization, tracing, and Scala Futures. This is the newest piece of this project, so it’s a work in progress.\nTutorial\nAPI Documentation\nMore info soon!","title":"Thrift"},{"location":"/codegen/graphql.html","text":"","title":"GraphQL"},{"location":"/codegen/graphql.html#graphql","text":"Projectile monitors your GraphQL schema and queries, and generates Scala case classes with input and result serialization. It’s cooler than I’m making it sound.\nTutorial\nAPI Documentation\nMore info soon!","title":"GraphQL"},{"location":"/codegen/sbt-plugin.html","text":"","title":"SBT Plugin"},{"location":"/codegen/sbt-plugin.html#sbt-plugin","text":"Projectile provides a (completely optional) sbt plugin\nThe plugin provides the command-line version of Projectile inside your application’s build. If you’ve installed Projectile via homebrew or one of the other methods, you don’t need the sbt plugin.\nTo enable it, add the following to your plugins.sbt:\naddSbtPlugin(\"com.kyleu\" % \"projectile-sbt\" % \"1.16.2\")\nThen add it to your project’s build definition:\nenablePlugins(SbtProjectile)\nNow, projectile will run each time you compile your project (don’t worry, it only adds a few milliseconds). You can also use the CLI by running the sbt task projectile\nAPI Documentation","title":"SBT Plugin"},{"location":"/admin/index.html","text":"","title":"Admin Web Application"},{"location":"/admin/index.html#admin-web-application","text":"","title":"Admin Web Application"},{"location":"/admin/index.html#overview","text":"Projectile admin web applications are projects built from your database, providing a bunch of useful (and optional) features. While the generated application is useful on its own, the project is designed to be extended with your own logic and rendering.","title":"Overview"},{"location":"/admin/index.html#features","text":"API Documentation Auditing Components Database Migrations Email Encryption GraphQL Help Notes Permissions Profile Reporting Sandbox Tasks Scheduled Tasks Search Sitemap SQL Prompt Status/Versions Swagger/OpenAPI System Processes System Users Websockets","title":"Features"},{"location":"/admin/index.html#api-documentation","text":"API Documentation","title":"API Documentation"},{"location":"/admin/features/audit.html","text":"","title":"Auditing"},{"location":"/admin/features/audit.html#auditing","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/audit projectileAudit.routes to your routes file\nFor enabled models, logs changes to the database automatically, with detailed information on what changed and by whom\nTODO","title":"Auditing"},{"location":"/admin/features/components.html","text":"","title":"Components"},{"location":"/admin/features/components.html#components","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /components projectileComponents.routes to your routes file\nUsed to allow requests for shared assets, mainly scripts and stylesheets\nTODO","title":"Components"},{"location":"/admin/features/migrate.html","text":"","title":"Database Migrations"},{"location":"/admin/features/migrate.html#database-migrations","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/migrate projectileMigrate.routes to your routes file\nRuns Flyway on application startup, and provides a UI to explore applied migrations\nTODO","title":"Database Migrations"},{"location":"/admin/features/email.html","text":"","title":"Email"},{"location":"/admin/features/email.html#email","text":"To send emails, inject EmailService, then call send. You’ll need to set up play-mailer in your application.conf\nTODO","title":"Email"},{"location":"/admin/features/encrypt.html","text":"","title":"Encryption"},{"location":"/admin/features/encrypt.html#encryption","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/encrypt projectileEncrypt.routes to your routes file\nUses the secret key from system configuration to encrypt and decrypt strings, including user sessions\nTODO","title":"Encryption"},{"location":"/admin/features/graphql.html","text":"","title":"GraphQL"},{"location":"/admin/features/graphql.html#graphql","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/graphql projectileGraphQL.routes to your routes file\nProvides an endpoint for a Sangria GraphQL schema, a GraphiQL IDE, and GraphQL Voyager schema visualization\nTODO","title":"GraphQL"},{"location":"/admin/features/help.html","text":"","title":"Help"},{"location":"/admin/features/help.html#help","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /help projectileHelp.routes to your routes file\nProvides help files for each action defined in a user’s menu\nTODO","title":"Help"},{"location":"/admin/features/note.html","text":"","title":"Notes"},{"location":"/admin/features/note.html#notes","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/note projectileNote.routes to your routes file\nFor enabled models, allows management of associated notes\nTODO","title":"Notes"},{"location":"/admin/features/permission.html","text":"","title":"Permissions"},{"location":"/admin/features/permission.html#permissions","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/permission projectilePermission.routes to your routes file\nProvides enforcement and a UI for the management of role-based permissions\nTODO","title":"Permissions"},{"location":"/admin/features/profile.html","text":"","title":"Profile"},{"location":"/admin/features/profile.html#profile","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /profile projectileProfile.routes to your routes file\nAuthentication routes, change password, and a profile view for changing user settings\nTODO","title":"Profile"},{"location":"/admin/features/reporting.html","text":"","title":"Reporting"},{"location":"/admin/features/reporting.html#reporting","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/reporting projectileReporting.routes to your routes file\nA framework to run reports, explore the results, and export to other formats\nTODO","title":"Reporting"},{"location":"/admin/features/sandbox.html","text":"","title":"Sandbox Tasks"},{"location":"/admin/features/sandbox.html#sandbox-tasks","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/sandbox projectileSandbox.routes to your routes file\nMostly a developer tool, this is a framework to run ad-hoc tasks and explore the results\nTODO","title":"Sandbox Tasks"},{"location":"/admin/features/task.html","text":"","title":"Scheduled Tasks"},{"location":"/admin/features/task.html#scheduled-tasks","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/task projectileTask.routes to your routes file\nWhen enabled, provides a UI for monitoring and executing system tasks that are run on a schedule\nTODO","title":"Scheduled Tasks"},{"location":"/admin/features/search.html","text":"","title":"Search"},{"location":"/admin/features/search.html#search","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/search projectileSearch.routes to your routes file\nGlobal site-wide search\nTODO","title":"Search"},{"location":"/admin/features/sitemap.html","text":"","title":"Sitemap"},{"location":"/admin/features/sitemap.html#sitemap","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /sitemap projectileSitemap.routes to your routes file\nProvides a navigable tree of actions available to the user\nTODO","title":"Sitemap"},{"location":"/admin/features/sql.html","text":"","title":"SQL Prompt"},{"location":"/admin/features/sql.html#sql-prompt","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/sql projectileSql.routes to your routes file\nAllows execution of arbitrary sql, with a UI that adds a small safety net (still quite dangerous!)\nTODO","title":"SQL Prompt"},{"location":"/admin/features/status.html","text":"","title":"Status/Versions"},{"location":"/admin/features/status.html#status-versions","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/status projectileStatus.routes to your routes file\nExposes a screen showing application status as an optional version history\nTODO","title":"Status/Versions"},{"location":"/admin/features/rest.html","text":"","title":"Swagger/OpenAPI"},{"location":"/admin/features/rest.html#swagger-openapi","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/rest projectileRest.routes to your routes file\nProvides Swagger documentation and a UI for interactively calling each controller’s actions\nTODO","title":"Swagger/OpenAPI"},{"location":"/admin/features/process.html","text":"","title":"System Processes"},{"location":"/admin/features/process.html#system-processes","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/process projectileProcess.routes to your routes file\nAllows execution and monitoring of arbitrary processes (very dangerous!)\nTODO","title":"System Processes"},{"location":"/admin/features/user.html","text":"","title":"System Users"},{"location":"/admin/features/user.html#system-users","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/systemuser projectileUser.routes to your routes file\nProvides a UI for managing the system users in the application\nTODO","title":"System Users"},{"location":"/admin/features/websocket.html","text":"","title":"Websockets"},{"location":"/admin/features/websocket.html#websockets","text":"This is an admin feature It depends on a project that extends projectile-lib-admin or enables the ProjectilePlayProject plugin To enable this feature, add -> /admin/websockets projectileWebsocket.routes to your routes file\nProvides a UI that allows you to view and broadcast to connected websockets\nTODO","title":"Websockets"},{"location":"/libraries/index.html","text":"","title":"Scala Libraries"},{"location":"/libraries/index.html#scala-libraries","text":"Projectile generates Scala code that expects helper classes to be available.\nYou can provide your own, or use the Projectile libraries. You almost certainly won’t need them all, but documentation on the provided classes is available here.\nCore Scala Tracing JDBC Slick Doobie Thrift GraphQL Service Scala.js Admin","title":"Scala Libraries"},{"location":"/libraries/core.html","text":"","title":"Core"},{"location":"/libraries/core.html#core","text":"Classes and utilities shared between Scala and Scala.js (API Documentation)","title":"Core"},{"location":"/libraries/core.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-core_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-core_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-core_2.12', version: '1.16.2'\n}\n(Or, use “%%%” for Scala.js and cross-built projects)","title":"Usage"},{"location":"/libraries/core.html#classes","text":"","title":"Classes"},{"location":"/libraries/core.html#","text":"Wrapper case class used for search results","title":"BaseResult"},{"location":"/libraries/core.html#","text":"A simple key and value case class, used where unordered maps aren’t appropriate","title":"Tag"},{"location":"/libraries/core.html#","text":"Provides ordering, formatting, and common utilities for Local and Zoned java.time date classes","title":"DateUtils"},{"location":"/libraries/core.html#","text":"Provides all the imports and utility methods you need to work with Circe using dates, uuids, enums and sealed traits","title":"JsonSerializers"},{"location":"/libraries/core.html#","text":"Rather than use null references in your code, NullUtils is provided for common operations and values involving nulls","title":"NullUtils"},{"location":"/libraries/core.html#","text":"Currently only provides a cross-platform method for formatting numbers","title":"NumberUtils"},{"location":"/libraries/core.html#","text":"Exposes a method to split a string to an ordered sequence of lines","title":"StringUtils"},{"location":"/libraries/core.html#","text":"Utility methods to transform a java.util.UUID to and from a sequence of bytes","title":"UuidUtils"},{"location":"/libraries/scala.html","text":"","title":"Scala"},{"location":"/libraries/scala.html#scala","text":"Common classes relating to core models and utilities (API Documentation)","title":"Scala"},{"location":"/libraries/scala.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-scala_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-scala_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-scala_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/scala.html#classes","text":"","title":"Classes"},{"location":"/libraries/scala.html#","text":"Uses a user-provided secret to encrypt and decrypt arbitrary bytes and strings using AES/ECB/PKCS5Padding","title":"EncryptionUtils"},{"location":"/libraries/scala.html#","text":"A JSON parser that supports comments and included external files","title":"JsonIncludeParser"},{"location":"/libraries/scala.html#","text":"Provides a logging interface that accepts TraceData in its methods and includes the trace ids in its output","title":"Logging"},{"location":"/libraries/scala.html#","text":"Used everywhere, TraceData is a common trait that exposes authentication and tracing information for OpenTracing services","title":"TraceData"},{"location":"/libraries/scala.html#","text":"Provides tracing helpers and methods to wrap access to OpenTracing","title":"TracingService"},{"location":"/libraries/tracing.html","text":"","title":"Tracing"},{"location":"/libraries/tracing.html#tracing","text":"Helper classes for OpenTracing and Micrometer (API Documentation)","title":"Tracing"},{"location":"/libraries/tracing.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-tracing_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-tracing_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-tracing_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/tracing.html#classes","text":"","title":"Classes"},{"location":"/libraries/tracing.html#","text":"Helper class to initialize Prometheus, Datadog, or StatsD metrics reporting","title":"Instrumented"},{"location":"/libraries/tracing.html#","text":"Case class containing all of the information needed to report metrics. Usually created from a config file.","title":"MetricsConfig"},{"location":"/libraries/tracing.html#","text":"Implements TracingService to provide system-wide tracing support","title":"OpenTracingService"},{"location":"/libraries/tracing.html#","text":"Extends TraceData with OpenTracing-specific functionality","title":"TraceDataOpenTracing"},{"location":"/libraries/jdbc.html","text":"","title":"JDBC"},{"location":"/libraries/jdbc.html#jdbc","text":"Imports and models for jdbc database connections (API Documentation)","title":"JDBC"},{"location":"/libraries/jdbc.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-jdbc_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-jdbc_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-jdbc_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/jdbc.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/slick.html","text":"","title":"Slick"},{"location":"/libraries/slick.html#slick","text":"Access routines for Slick databindings (API Documentation)","title":"Slick"},{"location":"/libraries/slick.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-slick_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-slick_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-slick_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/slick.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/doobie.html","text":"","title":"Doobie"},{"location":"/libraries/doobie.html#doobie","text":"Supporting classes for Doobie queries (API Documentation)","title":"Doobie"},{"location":"/libraries/doobie.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-doobie_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-doobie_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-doobie_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/doobie.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/thrift.html","text":"","title":"Thrift"},{"location":"/libraries/thrift.html#thrift","text":"Thrift service helpers, such as future conversions (API Documentation)","title":"Thrift"},{"location":"/libraries/thrift.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-thrift_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-thrift_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-thrift_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/thrift.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/graphql.html","text":"","title":"GraphQL"},{"location":"/libraries/graphql.html#graphql","text":"GraphQL utilities and helpers (API Documentation)","title":"GraphQL"},{"location":"/libraries/graphql.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-graphql_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-graphql_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-graphql_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/graphql.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/service.html","text":"","title":"Service"},{"location":"/libraries/service.html#service","text":"Supports service classes with various helpers (API Documentation)","title":"Service"},{"location":"/libraries/service.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-service_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-service_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-service_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/service.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/scalajs.html","text":"","title":"Scala.js"},{"location":"/libraries/scalajs.html#scala-js","text":"Scala.js helpers (API Documentation)","title":"Scala.js"},{"location":"/libraries/scalajs.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-scalajs_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-scalajs_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-scalajs_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/scalajs.html#classes","text":"TODO","title":"Classes"},{"location":"/libraries/admin.html","text":"","title":"Admin"},{"location":"/libraries/admin.html#admin","text":"Provides an administration web interface, graphql and rest IDE, authentication, and more (API Documentation)","title":"Admin"},{"location":"/libraries/admin.html#usage","text":"sbt libraryDependencies += \"com.kyleu\" % \"projectile-lib-admin_2.12\" % \"1.16.2\" Maven <dependency>\n  <groupId>com.kyleu</groupId>\n  <artifactId>projectile-lib-admin_2.12</artifactId>\n  <version>1.16.2</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.kyleu', name: 'projectile-lib-admin_2.12', version: '1.16.2'\n}","title":"Usage"},{"location":"/libraries/admin.html#classes","text":"TODO","title":"Classes"},{"location":"/tutorial/index.html","text":"","title":"Tutorials"},{"location":"/tutorial/index.html#tutorials","text":"The tutorials exist to help you understand and use Projectile effectively.","title":"Tutorials"},{"location":"/tutorial/index.html#","text":"This tutorial uses a PostgreSQL database to create a web app providing real-time planning poker estimation sessions. You can see the final result at estimate.poker, and view the source here.","title":"estimate.poker"},{"location":"/tutorial/index.html#","text":"This tutorial uses the public Star Wars GraphQL schema and generates Scala clients for hand-written queries.","title":"starwars"},{"location":"/tutorial/index.html#","text":"Once completed, this will be a tutorial on the usage of Thrift code generation.","title":"thrifty"},{"location":"/tutorial/index.html#table-of-contents","text":"poker starwars thrifty","title":"Table of contents"},{"location":"/tutorial/poker/index.html","text":"","title":"poker"},{"location":"/tutorial/poker/index.html#poker","text":"This tutorial uses a Postgres database to generate a full web application for Agile Planning Poker.\nTODO","title":"poker"},{"location":"/tutorial/starwars/index.html","text":"","title":"starwars"},{"location":"/tutorial/starwars/index.html#starwars","text":"This tutorial uses the public Star Wars GraphQL schema and generates Scala clients for hand-written queries.\nTODO","title":"starwars"},{"location":"/tutorial/thrifty/index.html","text":"","title":"thrifty"},{"location":"/tutorial/thrifty/index.html#thrifty","text":"Once completed, this will be a tutorial on the usage of Thrift code generation.\nTODO","title":"thrifty"},{"location":"/technology.html","text":"","title":"Technology"},{"location":"/technology.html#technology","text":"Projectile relies on a whole lot of tremendous open source projects. Here’s a few of them.\nScala Play Framework Akka Sangria Materialize CSS Enumeratum circe Font Awesome JQuery Slick Doobie OpenAPI","title":"Technology"},{"location":"/troubleshooting.html","text":"","title":"Troubleshooting"},{"location":"/troubleshooting.html#troubleshooting","text":"For now, hit GitHub Issues, we’re eager to help!","title":"Troubleshooting"},{"location":"/faq/index.html","text":"","title":"Fequently Asked Questions"},{"location":"/faq/index.html#fequently-asked-questions","text":"TODO","title":"Fequently Asked Questions"},{"location":"/faq/gui.html","text":"","title":"Accessing the Projectile GUI"},{"location":"/faq/gui.html#accessing-the-projectile-gui","text":"","title":"Accessing the Projectile GUI"},{"location":"/faq/gui.html#installing","text":"First, install Projectile using one of the methods described in Installing Projectile. Note that the SBT plugin can’t provide the GUI, so one of the other methods (usually homebrew) is required.","title":"Installing"},{"location":"/faq/gui.html#run-the-gui","text":"From your project’s directory, run projectile server. That’s it.","title":"Run the GUI"},{"location":"/faq/newenum.html","text":"","title":"Adding New Enums to a Projectile Application"},{"location":"/faq/newenum.html#adding-new-enums-to-a-projectile-application","text":"TODO, sorry…","title":"Adding New Enums to a Projectile Application"},{"location":"/faq/newtable.html","text":"","title":"Adding New Tables to a Projectile Application"},{"location":"/faq/newtable.html#adding-new-tables-to-a-projectile-application","text":"TODO, sorry…","title":"Adding New Tables to a Projectile Application"},{"location":"/faq/audit.html","text":"","title":"Removing Unused Files from a Projectile Application"},{"location":"/faq/audit.html#removing-unused-files-from-a-projectile-application","text":"TODO, sorry…","title":"Removing Unused Files from a Projectile Application"}]}